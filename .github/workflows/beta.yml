name: Beta Prerelease

on:
  push:
    branches:
      - 'story/**'
      - 'feature/**'
      - 'release/**'

jobs:
  beta:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@letuscode'
          always-auth: true
      - run: npm install --no-audit --no-fund
      - name: Verify npm auth
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: npm whoami || true
      - run: npm run build --if-present
      - name: Bump prerelease version (beta) without tagging
        shell: bash
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT"
          npm version prerelease --preid=beta --no-git-tag-version
          NEW=$(node -p "require('./package.json').version")
          echo "New version: $NEW"
      - name: Skip if version already exists
        id: exists
        shell: bash
        run: |
          PKG=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          if npm view "$PKG@$VER" version >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $PKG@$VER already exists on registry; skipping publish."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Publish to npm (beta tag)
        if: steps.exists.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: npm publish --tag beta --provenance --access public
